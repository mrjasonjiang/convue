import{o as n,c as s,a}from"./app.d4385936.js";const t='{"title":"路由","description":"","frontmatter":{},"headers":[{"level":2,"title":"动态路由","slug":"动态路由"},{"level":2,"title":"添加路由信息","slug":"添加路由信息"},{"level":2,"title":"路由重定向","slug":"路由重定向"}],"relativePath":"zh/guide/router.md","lastUpdated":1613803146380}',p={},e=a('<h1 id="路由"><a class="header-anchor" href="#路由" aria-hidden="true">#</a> 路由</h1><p>convue 默认会自动加载 /src/pages 目录下的 .vue|.js|.jsx|.ts|.tsx 文件，并且生成对应文件名称的路由。</p><p>比如 /src/pages 目录下的 index.tsx 文件对应的路由地址就是 /, user.tsx 文件对应的路由地址就是 /user。</p><h2 id="动态路由"><a class="header-anchor" href="#动态路由" aria-hidden="true">#</a> 动态路由</h2><p>动态路由的命名规则为 :param[.vue|.js|.jsx|.ts|.tsx]</p><h2 id="添加路由信息"><a class="header-anchor" href="#添加路由信息" aria-hidden="true">#</a> 添加路由信息</h2><p>在 /src/pages/index.tsx 文件中添加一个 route 标签。</p><div class="language-js"><pre><code><span class="token punctuation">{</span>\n  <span class="token comment">/* &lt;route&gt;\n  name: &#39;test&#39;\n  meta:\n    title: 111\n&lt;/route&gt; */</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><p>如果是 sfc (vue 单文件) 则不需要注释。</p><p>route 标签支持的语法有 &#39;json5&#39; | &#39;json&#39; | &#39;yaml&#39;，默认为 yaml，如果是 json 语法则指定 route 的 lang 即可。</p><div class="language-js"><pre><code><span class="token punctuation">{</span>\n  <span class="token comment">/* &lt;route lang=&quot;json&quot;&gt;\n  {\n    name: &#39;test&#39;,\n    meta: {\n      title: 111\n    }\n  }\n&lt;/route&gt; */</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><h2 id="路由重定向"><a class="header-anchor" href="#路由重定向" aria-hidden="true">#</a> 路由重定向</h2><p>当网站的地址不在路由注册表中，如果 /src/pages 下存在 404 页面，则重定向到 /404 地址，否则就重定向到 / 地址。</p><p>其他规则请<a href="/convue/zh/config/page.html">参考 page 配置项</a>。</p>',14);p.render=function(a,t,p,o,c,u){return n(),s("div",null,[e])};export default p;export{t as __pageData};
