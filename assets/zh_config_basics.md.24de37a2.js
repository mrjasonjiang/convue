import{o as a,c as s,a as e}from"./app.d4385936.js";const n='{"title":"其他配置","description":"","frontmatter":{},"headers":[{"level":2,"title":"loading","slug":"loading"},{"level":2,"title":"progress","slug":"progress"}],"relativePath":"zh/config/basics.md","lastUpdated":1613803093954}',o={},r=e('<h1 id="其他配置"><a class="header-anchor" href="#其他配置" aria-hidden="true">#</a> 其他配置</h1><h2 id="loading"><a class="header-anchor" href="#loading" aria-hidden="true">#</a> loading</h2><ul><li>Type: <code>string</code></li><li>Default: <code>undefined</code></li></ul><p>页面的 vue 实例创建完成前的 loading 颜色设置</p><p>使用指南请<a href="/convue/zh/guide/head.html">参考head</a>。</p><h2 id="progress"><a class="header-anchor" href="#progress" aria-hidden="true">#</a> progress</h2><ul><li>Type: <code>boolean | Progress</code></li><li>Default: <code>true</code></li></ul><p>路由切换时的进度条设置</p><p>如果设置为 false, 则不会显示，同时也不会引入该段代码。</p><p>Progress 的类型</p><div class="language-ts"><pre><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">Progress</span> <span class="token punctuation">{</span>\n  color<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n  size<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p>传入对象的话，可以设置进度条的颜色和尺寸。</p>',12);o.render=function(e,n,o,p,t,l){return a(),s("div",null,[r])};export default o;export{n as __pageData};
