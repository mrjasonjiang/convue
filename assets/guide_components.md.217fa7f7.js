import{o as n,c as s,a}from"./app.d4385936.js";const o='{"title":"Global components","description":"","frontmatter":{},"headers":[{"level":2,"title":"Multi-level directory","slug":"multi-level-directory"}],"relativePath":"guide/components.md","lastUpdated":1613802877274}',t={},e=a('<h1 id="global-components"><a class="header-anchor" href="#global-components" aria-hidden="true">#</a> Global components</h1><p>By default, convue will register the .vue|.js|.jsx|.ts|.tsx file in the /src/components directory as a global component.</p><p>For example, there is a Hello.tsx component under /src/components</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span>defineComponent<span class="token punctuation">}</span> <span class="token keyword">from</span><span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n   <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n     <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>Hello Convue<span class="token operator">!</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token punctuation">;</span>\n   <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><p>Use in the page</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span>defineComponent<span class="token punctuation">}</span> <span class="token keyword">from</span><span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>\n<span class="token comment">// import Hello from&#39;/src/components/hello&#39;; no need to load registration</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n   <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n     <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">&lt;</span>hello<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>hello<span class="token operator">&gt;</span><span class="token punctuation">;</span>\n   <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><p>It is recommended to use lowercase for global components, and big hump for custom components.</p><h2 id="multi-level-directory"><a class="header-anchor" href="#multi-level-directory" aria-hidden="true">#</a> Multi-level directory</h2><p>If there are multiple levels of directories under /src/components, then the naming of the components will be connected in the form of folder-file.</p><p>For example, src/components/app/navbar.tsx, then you need to add the prefix app (app-navbar) to use this component, and so on for more levels.</p><p>For other rules, please <a href="/convue/config/component.html">refer to component configuration items</a>.</p>',11);t.render=function(a,o,t,p,c,l){return n(),s("div",null,[e])};export default t;export{o as __pageData};
